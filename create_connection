#!/bin/bash

# This script needs to be run as root
echo "Checking if the script is run as root."
if [[ $EUID -ne 0 ]]; then
    echo -e "This script should be run as root. \n"
    exit
else
    echo -e "This script is run as root. Good to go. \n"
fi

# Installing for client or server?
read -p "Installing for server or client? Type (sS/cC): " answer

# Checking if IPsec is installed
echo "Checking if IPsec is installed"
ipdir="/etc/ipsec.d"
if [ ! -d "$ipdir" ]; then
    echo "Directory /etc/ipsec.d DOES NOT exists. Please install IPsec (https://libreswan.org)"
    echo "For Fedora - dnf -y install libreswan-3.*"
    echo "For Centos - yum -y install libreswan-3.*"
    echo "For Ubuntu - apt-get -y install libreswan"
    exit
else
    echo -e "IPsec is installed. \n"
fi

# Checking for any existing OE connections
echo -e "Checking for any existing OE connections"
oeExisting=$(ipsec traffic)
if [ -z "$oeExisting" ]; then
    echo "No existing OE connections found. Good to go."
else
    echo "Existing OE Connections Found. Stopping the connections."
    # Stopping the existing OE connections
    ipsec restart
fi

# Establishing an OE connection
echo -e "Establishing an OE connection. \n"
if [ "$answer" = "c" ] || [ "$answer" = "C" ]; then
    # Get the IP of client
    getIP=$(curl ifconfig.me)
    # Establish an OE connection in quiet mode
    ## Take server IP as user input (once the initial testing completes)
    ipsec whack --oppohere "$getIP" --oppothere 193.110.157.131 >/dev/null
fi

# Checking the success of establishing OE connection
echo -e "\nChecking the success of establishing OE connection \n"
oeSuccess=$(ipsec traffic)
if [ -z "$oeSuccess" ]; then
    echo -e "Failed to establish an OE connection. (Ignore this message if you installed for server. As it checks the ipsec traffic.) \n"
    exit
else
    echo -e "OE Connection established successfully \n"
    # Displaying connection status
    echo -e "Displaying connection status \n"
    ipsec traffic
fi
